syntax = "proto3";

//option java_multiple_files = true;
//option java_package = "io.grpc.examples.helloworld";
//option java_outer_classname = "HelloWorldProto";
//option objc_class_prefix = "HLW";

package scheduler;

service Scheduler {
  rpc checkin (CheckinReq) returns (CheckinReply) {}
  rpc execute (ExecuteReq) returns (ExecuteReply) {}
  rpc get_resources (GetResourcesReq) returns (GetResourcesReply) {}
  rpc get_finished (GetFinishedReq) returns (GetFinishedReply) {}
  rpc shutdown (ShutdownReq) returns (ShutdownReply) {}
  rpc get_samples (GetSamplesReq) returns (GetSamplesReply) {}
}

message CheckinReq {
  bool use_remote_mem = 1;
  uint32 max_cpus = 2;
  uint32 max_mem = 3;
  float uniform_ratio = 5;
  map<string, float> variable_ratios = 6;
  bool limit_remote_mem = 7;
  bool optimal = 8;
}

message CheckinReply {
  string server_name = 1;
  bool success = 2;
}

message ExecuteReq {
  string wname = 1;
  uint32 idd = 2;
}

message ExecuteReply {
  bool success = 1;
}

message GetResourcesReq { }

message GetResourcesReply {
  float free_cpus = 1;
  float alloc_mem = 2;
  float min_mem_sum = 3;
}

message GetFinishedReq { }

message GetFinishedReply {
  map<uint32, float> start_times = 1;
  map<uint32, float> finished_times = 2;
}

message ShutdownReq { }

message ShutdownReply {
  bool success = 1;
}

message GetSamplesReq { }

message GetSamplesReply {
  repeated float cpu_util = 1;
  repeated float mem_util = 2;
  repeated float swap_util = 3;
  repeated float bw_in = 4;
  repeated float bw_out = 5;
  repeated uint32 curr_pages = 6;
  float bytes_in = 7;
  float bytes_out = 8;
}
